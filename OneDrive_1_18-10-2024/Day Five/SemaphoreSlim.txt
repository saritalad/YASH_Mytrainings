using System;
using System.Threading;
using System.Threading.Tasks;

class Program
{
    static SemaphoreSlim semaphoreSlim = new SemaphoreSlim(2);

    static void Main()
    {
        // Using SemaphoreSlim
        Task[] tasks = new Task[5];
        for (int i = 0; i < tasks.Length; i++)
        {
            tasks[i] = Task.Run(AccessResourceAsync);
        }

        Task.WaitAll(tasks);
    }

   

    static async Task AccessResourceAsync()
    {
        await semaphoreSlim.WaitAsync();
        try
        {
            // Access shared resource
            Console.WriteLine($"Task {Task.CurrentId} is accessing the resource.");
            await Task.Delay(1000);
        }
        finally
        {
            semaphoreSlim.Release();
        }
    }
}